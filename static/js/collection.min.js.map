{"version":3,"sources":["webpack:///collection.min.js","webpack:///webpack/bootstrap 8f4d433481c6da3ddcc3","webpack:///./src/client/views/collection/index.js","webpack:///./~/fg-loadcss/loadCSS.js","webpack:///./~/multicb/index.js","webpack:///./src/client/utils/loadJson.js","webpack:///./src/client/utils/can-use-react.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","run","loadCSS","done","multicb","pluck","loadScript","loadState","err","res","console","error","collection","state","loadJson","_global","stateUrl","require","canUseReact","href","before","media","ss","ref","sheets","styleSheets","rel","onload","parentNode","insertBefore","onloadcssdefined","cb","defined","indexOf","setTimeout","allopts","o","k","d","_cb","_err","n","results","arguments","Array","prototype","slice","url","xhr","XMLHttpRequest","addEventListener","status","Error","responseText","JSON","parse","open","send","Object","create","freeze","Date","now","keys","isArray","every","forEach","map","Function","bind","String","split","trim"],"mappings":"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","file":"collection.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".min.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar loadCSS = __webpack_require__(1);\n\tvar multicb = __webpack_require__(2);\n\tvar loadJson = __webpack_require__(3);\n\tvar canUseReact = __webpack_require__(4);\n\t\n\tif (canUseReact()) run();\n\t\n\t\n\tfunction run() {\n\t  loadCSS('/static/css/enhanced.min.css');\n\t\n\t  var done = multicb({pluck: 1});\n\t  loadScript(done());\n\t  loadState(done());\n\t\n\t  done(function(err, res) {\n\t    if (err) return console.error(err);\n\t    var collection = res[0];\n\t    var state = res[1];\n\t    collection(state);\n\t  });\n\t}\n\t\n\t\n\tfunction loadState(done) {\n\t  loadJson(window._global.stateUrl, done);\n\t}\n\t\n\t\n\tfunction loadScript(done) {\n\t  __webpack_require__.e/* nsure */(1, function(require) {\n\t    done(null, __webpack_require__(5));\n\t  });\n\t}\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*!\n\tloadCSS: load a CSS file asynchronously.\n\t[c]2014 @scottjehl, Filament Group, Inc.\n\tLicensed MIT\n\t*/\n\tfunction loadCSS( href, before, media, callback ){\n\t\t\"use strict\";\n\t\t// Arguments explained:\n\t\t// `href` is the URL for your CSS file.\n\t\t// `before` optionally defines the element we'll use as a reference for injecting our <link>\n\t\t// By default, `before` uses the first <script> element in the page.\n\t\t// However, since the order in which stylesheets are referenced matters, you might need a more specific location in your document.\n\t\t// If so, pass a different reference element to the `before` argument and it'll insert before that instead\n\t\t// note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t\tvar ss = window.document.createElement( \"link\" );\n\t\tvar ref = before || window.document.getElementsByTagName( \"script\" )[ 0 ];\n\t\tvar sheets = window.document.styleSheets;\n\t\tss.rel = \"stylesheet\";\n\t\tss.href = href;\n\t\t// temporarily, set media to something non-matching to ensure it'll fetch without blocking render\n\t\tss.media = \"only x\";\n\t\t// DEPRECATED\n\t\tif( callback ) {\n\t\t\tss.onload = callback;\n\t\t}\n\t\n\t\t// inject link\n\t\tref.parentNode.insertBefore( ss, ref );\n\t\t// This function sets the link's media back to `all` so that the stylesheet applies once it loads\n\t\t// It is designed to poll until document.styleSheets includes the new sheet.\n\t\tss.onloadcssdefined = function( cb ){\n\t\t\tvar defined;\n\t\t\tfor( var i = 0; i < sheets.length; i++ ){\n\t\t\t\tif( sheets[ i ].href && sheets[ i ].href.indexOf( href ) > -1 ){\n\t\t\t\t\tdefined = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( defined ){\n\t\t\t\tcb();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tss.onloadcssdefined( cb );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tss.onloadcssdefined(function() {\n\t\t\tss.media = media || \"all\";\n\t\t});\n\t\treturn ss;\n\t}\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = loadCSS\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(allopts) {\n\t  var n = 0, m = 0, _cb, results = [], _err;\n\t  function o (k, d) { return allopts && allopts[k] !== void 0 ? allopts[k] : d }\n\t\n\t  return function(cb) {\n\t    if (cb) {\n\t      results.length = m\n\t\n\t      if(_err) {\n\t        var err = _err; _err = null\n\t        return cb(err)\n\t      }\n\t      if(n == m)\n\t        return cb(null, results)\n\t\n\t      _cb = cb\n\t      return\n\t    }\n\t\n\t    var i = m++\n\t    return function (err) {\n\t      if (err) {\n\t        _err = err\n\t        n = -1 // stop\n\t        if (_cb) _cb(err)\n\t      } else {\n\t        n++\n\t        if (o('pluck'))\n\t          results[i] = arguments[o('pluck')]\n\t        else\n\t          results[i] = Array.prototype.slice.call(arguments)\n\t        if (n === m && _cb)\n\t          _cb(null, results)\n\t      }\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tfunction loadJson(url, done) {\n\t  var xhr = new XMLHttpRequest();\n\t\n\t  xhr.addEventListener('load', function() {\n\t    if (xhr.status < 200 || xhr.status > 399) {\n\t      done(new Error(xhr.responseText));\n\t      return;\n\t    }\n\t\n\t    try {\n\t      done(null, JSON.parse(xhr.responseText));\n\t    }\n\t    catch (e) {\n\t      done(e);\n\t    }\n\t  });\n\t\n\t  xhr.open('get', url);\n\t  xhr.send();\n\t}\n\t\n\t\n\tmodule.exports = loadJson;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tfunction canUseReact() {\n\t  return Object.create\n\t      && Object.freeze\n\t      && Date.now\n\t      && Object.keys\n\t      && Array.isArray\n\t      && Array.prototype.every\n\t      && Array.prototype.forEach\n\t      && Array.prototype.indexOf\n\t      && Array.prototype.map\n\t      && Function.prototype.bind\n\t      && String.prototype.split\n\t      && String.prototype.trim;\n\t}\n\t\n\t\n\tmodule.exports = canUseReact;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** collection.min.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".min.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8f4d433481c6da3ddcc3\n **/","var loadCSS = require('exports?loadCSS!fg-loadcss');\nvar multicb = require('multicb');\nvar loadJson = require('../../utils/loadJson');\nvar canUseReact = require('../../utils/can-use-react');\n\nif (canUseReact()) run();\n\n\nfunction run() {\n  loadCSS('/static/css/enhanced.min.css');\n\n  var done = multicb({pluck: 1});\n  loadScript(done());\n  loadState(done());\n\n  done(function(err, res) {\n    if (err) return console.error(err);\n    var collection = res[0];\n    var state = res[1];\n    collection(state);\n  });\n}\n\n\nfunction loadState(done) {\n  loadJson(window._global.stateUrl, done);\n}\n\n\nfunction loadScript(done) {\n  require.ensure(['./collection'], function(require) {\n    done(null, require('./collection'));\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/client/views/collection/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/*!\nloadCSS: load a CSS file asynchronously.\n[c]2014 @scottjehl, Filament Group, Inc.\nLicensed MIT\n*/\nfunction loadCSS( href, before, media, callback ){\n\t\"use strict\";\n\t// Arguments explained:\n\t// `href` is the URL for your CSS file.\n\t// `before` optionally defines the element we'll use as a reference for injecting our <link>\n\t// By default, `before` uses the first <script> element in the page.\n\t// However, since the order in which stylesheets are referenced matters, you might need a more specific location in your document.\n\t// If so, pass a different reference element to the `before` argument and it'll insert before that instead\n\t// note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\tvar ss = window.document.createElement( \"link\" );\n\tvar ref = before || window.document.getElementsByTagName( \"script\" )[ 0 ];\n\tvar sheets = window.document.styleSheets;\n\tss.rel = \"stylesheet\";\n\tss.href = href;\n\t// temporarily, set media to something non-matching to ensure it'll fetch without blocking render\n\tss.media = \"only x\";\n\t// DEPRECATED\n\tif( callback ) {\n\t\tss.onload = callback;\n\t}\n\n\t// inject link\n\tref.parentNode.insertBefore( ss, ref );\n\t// This function sets the link's media back to `all` so that the stylesheet applies once it loads\n\t// It is designed to poll until document.styleSheets includes the new sheet.\n\tss.onloadcssdefined = function( cb ){\n\t\tvar defined;\n\t\tfor( var i = 0; i < sheets.length; i++ ){\n\t\t\tif( sheets[ i ].href && sheets[ i ].href.indexOf( href ) > -1 ){\n\t\t\t\tdefined = true;\n\t\t\t}\n\t\t}\n\t\tif( defined ){\n\t\t\tcb();\n\t\t}\n\t\telse {\n\t\t\tsetTimeout(function() {\n\t\t\t\tss.onloadcssdefined( cb );\n\t\t\t});\n\t\t}\n\t};\n\tss.onloadcssdefined(function() {\n\t\tss.media = media || \"all\";\n\t});\n\treturn ss;\n}\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = loadCSS\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?loadCSS!./~/fg-loadcss/loadCSS.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = function(allopts) {\n  var n = 0, m = 0, _cb, results = [], _err;\n  function o (k, d) { return allopts && allopts[k] !== void 0 ? allopts[k] : d }\n\n  return function(cb) {\n    if (cb) {\n      results.length = m\n\n      if(_err) {\n        var err = _err; _err = null\n        return cb(err)\n      }\n      if(n == m)\n        return cb(null, results)\n\n      _cb = cb\n      return\n    }\n\n    var i = m++\n    return function (err) {\n      if (err) {\n        _err = err\n        n = -1 // stop\n        if (_cb) _cb(err)\n      } else {\n        n++\n        if (o('pluck'))\n          results[i] = arguments[o('pluck')]\n        else\n          results[i] = Array.prototype.slice.call(arguments)\n        if (n === m && _cb)\n          _cb(null, results)\n      }\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/multicb/index.js\n ** module id = 2\n ** module chunks = 0\n **/","function loadJson(url, done) {\n  var xhr = new XMLHttpRequest();\n\n  xhr.addEventListener('load', function() {\n    if (xhr.status < 200 || xhr.status > 399) {\n      done(new Error(xhr.responseText));\n      return;\n    }\n\n    try {\n      done(null, JSON.parse(xhr.responseText));\n    }\n    catch (e) {\n      done(e);\n    }\n  });\n\n  xhr.open('get', url);\n  xhr.send();\n}\n\n\nmodule.exports = loadJson;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/client/utils/loadJson.js\n ** module id = 3\n ** module chunks = 0\n **/","function canUseReact() {\n  return Object.create\n      && Object.freeze\n      && Date.now\n      && Object.keys\n      && Array.isArray\n      && Array.prototype.every\n      && Array.prototype.forEach\n      && Array.prototype.indexOf\n      && Array.prototype.map\n      && Function.prototype.bind\n      && String.prototype.split\n      && String.prototype.trim;\n}\n\n\nmodule.exports = canUseReact;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/client/utils/can-use-react.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}